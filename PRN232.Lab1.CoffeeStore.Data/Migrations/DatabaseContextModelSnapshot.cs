// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN232.Lab1.CoffeeStore.Data.Database;

#nullable disable

namespace PRN232.Lab1.CoffeeStore.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "11111111-1111-1111-1111-111111111111",
                            Description = "Drinks and coffee",
                            Name = "Beverages"
                        },
                        new
                        {
                            CategoryId = "22222222-2222-2222-2222-222222222222",
                            Description = "Light snacks and pastries",
                            Name = "Snacks"
                        },
                        new
                        {
                            CategoryId = "33333333-3333-3333-3333-333333333333",
                            Description = "Milk and milk products",
                            Name = "Dairy"
                        },
                        new
                        {
                            CategoryId = "44444444-4444-4444-4444-444444444444",
                            Description = "Bread and baked goods",
                            Name = "Bakery"
                        },
                        new
                        {
                            CategoryId = "55555555-5555-5555-5555-555555555555",
                            Description = "Cold beverages",
                            Name = "Cold Drinks"
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Menu", b =>
                {
                    b.Property<string>("MenuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = "11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            FromDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Breakfast Menu",
                            ToDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuId = "22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb",
                            FromDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lunch Menu",
                            ToDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuId = "33333333-cccc-cccc-cccc-cccccccccccc",
                            FromDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dinner Menu",
                            ToDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuId = "44444444-dddd-dddd-dddd-dddddddddddd",
                            FromDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Snack Menu",
                            ToDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuId = "55555555-eeee-eeee-eeee-eeeeeeeeeeee",
                            FromDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drinks Menu",
                            ToDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            CategoryId = "11111111-1111-1111-1111-111111111111",
                            Description = "Strong coffee shot",
                            Name = "Espresso",
                            Price = 2.5m
                        },
                        new
                        {
                            ProductId = "bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb",
                            CategoryId = "22222222-2222-2222-2222-222222222222",
                            Description = "Buttery French pastry",
                            Name = "Croissant",
                            Price = 3.0m
                        },
                        new
                        {
                            ProductId = "cccccccc-cccc-cccc-cccc-cccccccccccc",
                            CategoryId = "33333333-3333-3333-3333-333333333333",
                            Description = "Cheddar cheese block",
                            Name = "Cheese",
                            Price = 4.5m
                        },
                        new
                        {
                            ProductId = "dddddddd-dddd-dddd-dddd-dddddddddddd",
                            CategoryId = "44444444-4444-4444-4444-444444444444",
                            Description = "French bread",
                            Name = "Baguette",
                            Price = 2.0m
                        },
                        new
                        {
                            ProductId = "eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee",
                            CategoryId = "55555555-5555-5555-5555-555555555555",
                            Description = "Cold black tea with ice",
                            Name = "Iced Tea",
                            Price = 2.0m
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.ProductInMenu", b =>
                {
                    b.Property<string>("ProductInMenuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductInMenuId");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInMenus");

                    b.HasData(
                        new
                        {
                            ProductInMenuId = "1a1a1a1a-1111-1111-1111-111111111111",
                            MenuId = "11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            ProductId = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            Quantity = 10
                        },
                        new
                        {
                            ProductInMenuId = "2b2b2b2b-2222-2222-2222-222222222222",
                            MenuId = "22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb",
                            ProductId = "bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb",
                            Quantity = 15
                        },
                        new
                        {
                            ProductInMenuId = "3c3c3c3c-3333-3333-3333-333333333333",
                            MenuId = "33333333-cccc-cccc-cccc-cccccccccccc",
                            ProductId = "cccccccc-cccc-cccc-cccc-cccccccccccc",
                            Quantity = 20
                        },
                        new
                        {
                            ProductInMenuId = "4d4d4d4d-4444-4444-4444-444444444444",
                            MenuId = "44444444-dddd-dddd-dddd-dddddddddddd",
                            ProductId = "dddddddd-dddd-dddd-dddd-dddddddddddd",
                            Quantity = 5
                        },
                        new
                        {
                            ProductInMenuId = "5e5e5e5e-5555-5555-5555-555555555555",
                            MenuId = "55555555-eeee-eeee-eeee-eeeeeeeeeeee",
                            ProductId = "eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee",
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Product", b =>
                {
                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.ProductInMenu", b =>
                {
                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Menu", "Menu")
                        .WithMany("ProductInMenus")
                        .HasForeignKey("MenuId");

                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Product", "Product")
                        .WithMany("ProductInMenus")
                        .HasForeignKey("ProductId");

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Menu", b =>
                {
                    b.Navigation("ProductInMenus");
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Product", b =>
                {
                    b.Navigation("ProductInMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
